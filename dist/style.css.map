{"version":3,"sources":["globals/boilerplate.scss","style.css","globals/typography.scss","util/breakpoints.scss","globals/colors.scss","globals/fonts.scss","globals/layout.scss","components/card.scss","components/toggle.scss","components/header.scss"],"names":[],"mappings":"AAAA,KAEI,qBAAA,CADA,cCEJ,CDKA,iBACI,kBCFJ,CDMA,KAII,yBAAA,CACA,uBAAA,CAFA,6BAAA,CAFA,QAAA,CACA,SCAJ,CCbA,SAEI,eAAA,CADA,YDiBJ,CCbA,GAEI,gBAAA,CACA,sBDeJ,CETI,4BDTJ,GAMQ,iBDgBN,CACF,CCbA,qBACI,oBDgBJ,CG9BA,MAGI,mBAAA,CACA,mBAAA,CACA,kBAAA,CAEA,yBAAA,CACA,uBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,yBAAA,CACA,uBAAA,CAEA,yBAAA,CAEA,iBAAA,CACA,qBAAA,CACA,mBAAA,CACA,oBAAA,CACA,iBAAA,CAEA,eAAA,CACA,sBAAA,CACA,oBAAA,CACA,qBAAA,CACA,qBAAA,CC9BA,+BJwDJ,CKvDA,WAII,sBAAA,CADA,mBAAA,CAFA,mBLgEJ,CEnDI,4BGdJ,WAOQ,SL8DN,CACF,CMpEA,MACI,eNuEJ,CO1EA,QAOI,kBAAA,CADA,WAAA,CALA,YAAA,CAIA,gBAAA,CAFA,0CAAA,CACA,iCP+EJ,CO1EI,cACI,iBP4ER,CO3EQ,wBACI,SAAA,CACA,eAAA,CACA,YAAA,CACA,gBP6EZ,CO3EQ,0BACI,UAAA,CACA,eP6EZ,CO1EQ,yBACI,UAAA,CACA,eAAA,CACA,YAAA,CACA,kBP4EZ,COvEI,iBAII,YAAA,CACA,aAAA,CAFA,iBP0ER,COrEI,0BAII,WAAA,CAFA,iBAAA,CADA,SAAA,CAEA,UPwER,COpEI,oBAQI,uFAAA,CAHA,oBAAA,CAEA,aAAA,CAHA,WAAA,CAEA,eAAA,CAIA,mBAAA,CATA,iBAAA,CACA,KAAA,CACA,UP4ER,COjEI,gBAQI,+BAAA,CADA,iBAAA,CADA,eAAA,CAJA,aAAA,CADA,iBAAA,CAGA,UAAA,CADA,YAAA,CAMA,+BAAA,CAJA,cPuER,CO/DI,uCACI,sBAAA,CACA,SPiER,CO9DI,wCACI,QAAA,CACA,UAAA,CACA,yBPgER,CQjJA,QACI,kBRoJJ,CEvII,wBMdJ,QAKQ,kBAAA,CAFA,YAAA,CACA,6BRuJN,CACF,CQ7II,kBAGI,uBAAA,CAFA,iBAAA,CACA,eRgJR,CQ5II,UACI,QAAA,CACA,SR8IR","file":"style.css","sourcesContent":["html {\r\n    font-size: 100%; // According to CoderCoder, helps with accessibility\r\n    box-sizing: border-box; // If add padding to an element, ensures that\r\n    // the total width of the element will include the padding, so an element of 300px\r\n    // with a padding of 20px will still be 300px\r\n}\r\n\r\n// This way all elements inherit from the border-box box-sizing\r\n*, *::before, *::after {\r\n    box-sizing: inherit;\r\n}\r\n\r\n// Reset margin and padding at the beginning, also choose the font provided from the tutorial\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: var(--font-inter);\r\n    background: var(--dark-bg);\r\n    color: var(--dark-text2);\r\n}","html {\n  font-size: 100%;\n  box-sizing: border-box;\n}\n\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: var(--font-inter);\n  background: var(--dark-bg);\n  color: var(--dark-text2);\n}\n\nh1, h2, h3 {\n  margin-top: 0;\n  line-height: 1.1;\n}\n\nh1 {\n  font-size: 1.5rem;\n  margin-bottom: 0.1875rem;\n}\n@media (min-width: 71.875em) {\n  h1 {\n    font-size: 1.75rem;\n  }\n}\n\na, a:visited, a:active {\n  text-decoration: none;\n}\n\n:root {\n  --limegreen:hsl(163, 72%, 41%);\n  --brightred:hsl(356, 69%, 56%);\n  --facebook:hsl(208, 92%, 53%);\n  --instagram-start:hsl(37, 97%, 70%);\n  --instagram-end:hsl(329, 70%, 58%);\n  --twitter:hsl(203, 89%, 53%);\n  --youtube:hsl(348, 97%, 39%);\n  --toggle-bg-start:hsl(210, 78%, 56%);\n  --toggle-bg-end:hsl(146, 68%, 55%);\n  --toggle-bg-light:hsl(230, 22%, 74%);\n  --dark-bg:hsl(230, 17%, 14%);\n  --dark-top-bg:hsl(232, 19%, 15%);\n  --dark-card:hsl(228, 28%, 20%);\n  --dark-text1:hsl(228, 34%, 66%);\n  --dark-text2:hsl(0, 0%, 100%);\n  --light-bg:hsl(0, 0%, 100%);\n  --light-top-bg:hsl(225, 100%, 98%);\n  --light-card:hsl(227, 47%, 96%);\n  --light-text1:hsl(228, 12%, 44%);\n  --light-text2:hsl(230, 17%, 14%);\n}\n\n:root {\n  --font-inter: \"Inter\", sans-serif;\n}\n\n.container {\n  padding: 0 1.5625rem;\n  max-width: 69.375rem;\n  margin: 0 auto 2.875rem;\n}\n@media (min-width: 71.875em) {\n  .container {\n    padding: 0;\n  }\n}\n\n.card {\n  padding: 1.25rem;\n}\n\n.toggle {\n  display: grid;\n  grid-template-columns: repeat(1fr 60px 1fr);\n  grid-template-rows: repeat(2, 24px);\n  gap: 0.25rem 0.5rem;\n  border: none;\n  align-items: center;\n}\n.toggle label {\n  font-size: 0.875rem;\n}\n.toggle label[for=dark] {\n  color: red;\n  grid-column: 1/2;\n  grid-row: 1/2;\n  justify-self: end;\n}\n.toggle label[for=system] {\n  color: white;\n  grid-column: 2/3;\n}\n.toggle label[for=light] {\n  color: blue;\n  grid-column: 3/4;\n  grid-row: 1/2;\n  justify-self: start;\n}\n.toggle__wrapper {\n  height: 1.5rem;\n  position: relative;\n  grid-row: 1/2;\n  height: 1.5rem;\n}\n.toggle input[type=radio] {\n  opacity: 0;\n  margin: 0 -0.125rem 0 -0.125rem;\n  width: 20px;\n  height: 24px;\n}\n.toggle__background {\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.75rem;\n  overflow: hidden;\n  display: block;\n  background: linear-gradient(225deg, var(--toggle-bg-end) 0%, var(--toggle-bg-start) 98.02%);\n  pointer-events: none;\n}\n.toggle__button {\n  position: absolute;\n  left: 0.1875rem;\n  top: 0.1875rem;\n  right: 100%;\n  width: 1.125rem;\n  height: 1.125rem;\n  border-radius: 50%;\n  background-color: var(--dark-bg);\n  transition: all 150ms ease-in-out;\n}\n.toggle #light:checked ~ .toggle__button {\n  left: calc(100% - 26px);\n  right: 3px;\n}\n.toggle #system:checked ~ .toggle__button {\n  left: 50%;\n  right: auto;\n  transform: translate(-50%);\n}\n\n.header {\n  margin-top: 2.25rem;\n}\n@media (min-width: 40em) {\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n}\n.header__subtitle {\n  font-size: 0.875rem;\n  font-weight: 700;\n  color: var(--dark-text1);\n}\n.header p {\n  margin: 0;\n  padding: 0;\n}","@use '../util' as *;\r\n\r\nh1, h2, h3 {\r\n    margin-top:0; //personal taste from codercoder\r\n    line-height: 1.1;\r\n}\r\n\r\nh1 {\r\n\r\n    font-size: rem(24);\r\n    margin-bottom: rem(3);\r\n\r\n    @include breakpoint(large) {\r\n        font-size: rem(28);\r\n    }\r\n}\r\n\r\na, a:visited, a:active {\r\n    text-decoration:none; // so there is no underline\r\n}","// 640px, 1150px, 1400px\r\n$breakpoints-up: (\r\n    'medium': '40em',\r\n    'large': '71.875em',\r\n    'xlarge': '87.5em'\r\n);\r\n\r\n\r\n\r\n\r\n// $breakpoints-up: (\r\n//     'desktop':'1440px',\r\n//     'mobile':'375px'\r\n// );\r\n\r\n@mixin breakpoint($size){\r\n    @media (min-width: map-get($breakpoints-up, $size)) {\r\n        @content\r\n    }\r\n}","// Codercoder moved these to globals and not util as she keeps sass variables and mixin in utils,\r\n// and they aren't translated to css until used, these colors are CSS so need to be in globals\r\n// at all times\r\n\r\n:root {\r\n    // :root targets the html element but its specificity is stronger\r\n    // css custom properties (/variables?) below\r\n    --limegreen:hsl(163, 72%, 41%);\r\n    --brightred:hsl(356, 69%, 56%);\r\n    --facebook:hsl(208, 92%, 53%);\r\n    // below two instagrams for linear gradient\r\n    --instagram-start:hsl(37, 97%, 70%);\r\n    --instagram-end:hsl(329, 70%, 58%);\r\n    --twitter:hsl(203, 89%, 53%);\r\n    --youtube:hsl(348, 97%, 39%);\r\n    //the background of the toggle button in dark mode\r\n    --toggle-bg-start:hsl(210, 78%, 56%);\r\n    --toggle-bg-end:hsl(146, 68%, 55%);\r\n    //the background of the toggle button in light mode\r\n    --toggle-bg-light:hsl(230, 22%, 74%);\r\n    // The dark theme variables\r\n    --dark-bg:hsl(230, 17%, 14%);\r\n    --dark-top-bg:hsl(232, 19%, 15%);\r\n    --dark-card:hsl(228, 28%, 20%);\r\n    --dark-text1:hsl(228, 34%, 66%); // originally light blue\r\n    --dark-text2:hsl(0, 0%, 100%); //originally white\r\n    //The light theme variables\r\n    --light-bg:hsl(0, 0%, 100%);\r\n    --light-top-bg:hsl(225, 100%, 98%);\r\n    --light-card:hsl(227, 47%, 96%);\r\n    --light-text1:hsl(228, 12%, 44%); // originally grayish blue\r\n    --light-text2:hsl(230, 17%, 14%); //originally dark blue\r\n}",":root {\r\n    --font-inter: 'Inter', sans-serif;\r\n}\r\n\r\n// Later on, will use font-family: var(--font-inter); to call the font\r\n// This is a font loaded from google, already put in link in html page","@use '../util' as *;\r\n\r\n.container {\r\n    padding: 0 rem(25); // we will want 25px padding on left and right of containers in mobile\r\n                        // version\r\n    max-width: rem(1110);\r\n    margin: 0 auto rem(46);\r\n\r\n    @include breakpoint(large) {\r\n        padding: 0; // we won't want any padding on desktop versions\r\n    }\r\n}","@use '../util' as *; // apparently if you import all these as *, then you can just directly\r\n// use the names defined in util without having to do util.your_name each time\r\n// should be avoided for bigger app\r\n\r\n.card {\r\n    padding: rem(20);\r\n}","@use '../util' as *;\r\n\r\n.toggle {\r\n    display: grid;\r\n    // grid-template-columns: repeat(3, 1fr);\r\n    grid-template-columns: repeat(1fr 60px 1fr);\r\n    grid-template-rows: repeat(2, 24px);\r\n    gap: rem(4) rem(8);\r\n    border: none;\r\n    align-items: center;\r\n    \r\n    label {\r\n        font-size: rem(14);\r\n        &[for=\"dark\"] {\r\n            color: red;\r\n            grid-column: 1 / 2;\r\n            grid-row: 1/2;\r\n            justify-self: end;\r\n        }\r\n        &[for=\"system\"] {\r\n            color: white;\r\n            grid-column: 2 / 3;\r\n            // grid-row: 2 / 3;\r\n        }\r\n        &[for=\"light\"] {\r\n            color: blue;\r\n            grid-column: 3 / 4;\r\n            grid-row: 1 / 2;\r\n            justify-self: start;\r\n        }\r\n    }\r\n\r\n\r\n    &__wrapper {\r\n        height: rem(24);\r\n        // grid-row: 1 / 2;\r\n        position: relative;\r\n        grid-row: 1 / 2;\r\n        height: 1.5rem;\r\n    }\r\n\r\n    input[type=\"radio\"] {\r\n        opacity: 0;\r\n        margin: 0 rem(-2) 0 rem(-2);\r\n        width: 20px;\r\n        height: 24px;\r\n    }\r\n\r\n    &__background {\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: rem(12);\r\n        overflow: hidden;\r\n        display: block;\r\n        background: linear-gradient(225deg, var(--toggle-bg-end) 0%, \r\n                                    var(--toggle-bg-start) 98.02%);\r\n        pointer-events: none; // Allows you to click radio button through background\r\n                            // Can also click on the labels directly\r\n    }\r\n\r\n    &__button {\r\n        position: absolute;\r\n        left: rem(3); // moves the button 3px righter so it doesn't stick to the left completely\r\n        top: rem(3);\r\n        right: 100%;\r\n        width: rem(18);\r\n        height: rem(18);\r\n        border-radius: 50%;\r\n        background-color: var(--dark-bg);\r\n        transition: all 150ms ease-in-out;\r\n        \r\n    }\r\n\r\n    #light:checked ~ .toggle__button {\r\n        left: calc(100% - 26px);\r\n        right: 3px;\r\n    }\r\n\r\n    #system:checked ~ .toggle__button {\r\n        left: 50%;\r\n        right: auto;\r\n        transform: translate(-50%); // We have to do this because the width of the button isn't\r\n                                    // calculated when we say left 50%, so transform will allow\r\n                                    // the button to move by a half of itself to one direction\r\n    }\r\n\r\n   \r\n}","@use '../util' as *;\r\n\r\n.header {\r\n    margin-top: rem(36);\r\n    @include breakpoint(medium) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    &__title {\r\n\r\n    }\r\n\r\n    &__toggle {\r\n\r\n    }\r\n\r\n    &__subtitle {\r\n        font-size: rem(14);\r\n        font-weight: 700;\r\n        color: var(--dark-text1);\r\n    }\r\n\r\n    p {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n}"]}